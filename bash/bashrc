# <PERSONAL BASHRC STUFF>

# add libraries to path
# for native code libraries
# export LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

# add to pythonpath
# are added tp pythons sys.path
# export PYTHONPATH=/usr/local/cuda-9.0/lib64${PYTHONPATH:+:${PYTHONPATH}}

# add folders to path:
# for binaries and executables
# export PATH=/informatik2/students/home/5rietz/pycharm-2019.1.3/bin${PATH:+:${PATH}}
# export PATH=/usr/local/cuda-9.0/bin${PATH:+:${PATH}}

# color ls ouput
alias ls="ls --color=auto"

# color grep output
alias grep="grep --color=auto"

# gac "commit message"
alias gac="git add . && git commit -a -m "

# echo ip of machine
alias myip="curl http://ipecho.net/plain; echo"

# sort by size all files in human readable format
alias lss="ls -Ssha --color=auto"

# sorts by date modified 
alias lt='ls -t'

# -a archive mode: preserve permissions, ownership, edit times etc
# -v verbose output
# -z compression during transer
# -h humanm readable output
# --info=progress2 total progres percentage
# --ignore-existing prevents files from being copied over that already exist on the the destination
alias rsync="rsync -avzh --info=progress2 --ignore-existing"

# always use rsync over cp...
alias cp="rsync -avzh --info=progress2 --ignore-existing"

# use find to delete all files in all subdirectories with the given name
fd() {
	if [ $# -eq 1 ]
	then
		echo "Deleting files containing '$1' from all subdiretories...";
		find . -name "$1" -type f -delete -print;
		echo "Done";
	else
		echo "FAIL: Provide a non-empty string parameter to determine which files to delete";
	fi
}

# creates tar.gz archive from folder -c: create new archive, -v: verbose, -f: pack a file, -z: use gzip
alias tarc="tar -czvf"

# extract tar.gz archive 
alias tarx="tar -xzvf"

# to attach new bash sessions to docker container
# assumes that only one container is active, finds that containers id and attaches a new bash shell to it..
attach_new_sess () { 
  sudo docker ps; 
  containerid=$(sudo docker ps | tail -1 | awk '{print $1}'); 
  echo "Extracted CONAINER ID: $containerid"; 
  echo "Spawning new bash shell in container..."
  sudo docker exec -it $containerid bash;
}
alias ans='attach_new_sess'

# function to set title of terminal window
function set-title() {
  if [[ -z "$ORIG" ]]; then
    ORIG=$PS1
  fi
  TITLE="\[\e]2;$*\a\]"
  PS1=${ORIG}${TITLE}
}

# starts cyberghost vpn to netherland server optimized for traffic
alias vpn='sudo cyberghostvpn --traffic --country-code NL --connect'

# stops vpn connections
alias vpns='sudo cyberghostvpn --stop'

# nice welcome header...
vpnstatus=$(cyberghostvpn --status)
timestamp=$(date +"%d-%m-%Y %T")
echo "#================#~~ Welcome master ~~#================#"
echo "VPN status: $vpnstatus"
echo "Date: $timestamp"
free -m | awk 'NR==2{printf "Memory Usage: %s/%sMB (%.2f%%)\n", $3,$2,$3*100/$2 }'
df -h | awk '$NF=="/"{printf "Disk Usage: %d/%dGB (%s)\n", $3,$2,$5}'
echo "#======================================================#"


# </PERSONAL BASHRC STUFF>

